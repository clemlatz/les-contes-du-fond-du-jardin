---
import { type CollectionEntry, getCollection, render } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { Image } from 'astro:assets';
import FormattedDate from '../../components/FormattedDate.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await render(post);
const { title, description, pubDate, updatedDate, heroImage, audioUrl } =
  post.data;

const episodeTitle = title;

const sizeInMB = Math.round(post.data.sizeInBytes / (1024 * 1024));
---

<style>
  .hero-image {
    width: 100%;
  }
  .hero-image img {
    display: block;
    margin: 0 auto;
    border-radius: 12px;
    box-shadow: var(--box-shadow);
  }
  .prose {
    width: 720px;
    max-width: calc(100% - 2em);
    margin: auto;
    padding: 1em;
    color: rgb(var(--gray-dark));
  }
  .title {
    margin: 0;
    padding: 0;
    line-height: 1;
  }
  .title h1 {
    margin: 0 0 0.5em 0;
  }
  .date {
    color: rgb(var(--gray));
  }
  .last-updated-on {
    font-style: italic;
  }

  .buttons {
    display: flex;
    gap: 8px;
  }

  .Button {
    align-items: center;
    background-color: rgb(0, 0, 0, 0.8);
    border: none;
    border-radius: 32px;
    color: white;
    cursor: pointer;
    display: inline-flex;
    font-size: 16px;
    gap: 8px;
    margin: 24px 0 64px;
    padding: 12px 16px 12px 12px;
    text-decoration: none;
  }

  .Button--download .Button__icon {
    rotate: 90deg;
  }
</style>

<Layout {...post.data}>
  <article>
    <div class="hero-image">
      {heroImage && <Image width={1020} height={510} src={heroImage} alt="" />}
    </div>
    <div class="prose">
      <div class="title">
        <h1>{title}</h1>
        <div class="date">
          <FormattedDate date={pubDate} />
        </div>
      </div>
      <div class="buttons">
        <button id="play-episode" class="Button">
          <img
            src="/icons/play.svg"
            class="Button__icon"
            alt="Play icon"
            width="24"
            height="24"
          />
          Écouter ({post.data.durationInMinutes} min)
        </button>
        <a
          href={audioUrl}
          class="Button Button--download"
          download={`${post.id}.mp3`}
        >
          <img
            src="/icons/play.svg"
            class="Button__icon"
            alt="Play icon"
            width="24"
            height="24"
          />
          Télécharger ({sizeInMB} Mo)
        </a>
      </div>
      <Content />
    </div>
  </article>
</Layout>

<script define:vars={{ episodeTitle, episodeUrl: Astro.url, audioUrl }}>
  const playEpisodeButton = document.getElementById('play-episode');
  console.log(audioUrl);

  if (playEpisodeButton) {
    playEpisodeButton.addEventListener('click', () => {
      document.dispatchEvent(
        new CustomEvent('audio:play', {
          detail: {
            title: episodeTitle,
            href: episodeUrl,
            audioUrl,
          },
        }),
      );
    });
  }
</script>
